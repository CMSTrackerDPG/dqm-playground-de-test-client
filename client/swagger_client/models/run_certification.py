# coding: utf-8

"""
    MLPlayground

    API  # noqa: E501

    OpenAPI spec version: 0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RunCertification(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'run': 'int',
        '_date': 'datetime',
        'rr_is_pixel_good': 'bool',
        'rr_is_strip_good': 'bool',
        'rr_is_ecal_good': 'bool',
        'rr_is_hcal_good': 'bool',
        'rr_is_dt_good': 'bool',
        'rr_is_csc_good': 'bool',
        'rr_is_tracking_good': 'bool',
        'rr_is_muon_good': 'bool',
        'rr_is_egamma_good': 'bool',
        'rr_is_tau_good': 'bool',
        'rr_is_jetmet_good': 'bool',
        'rr_is_btag_good': 'bool',
        'rr_frac_pixel_good': 'float',
        'rr_frac_strip_good': 'float',
        'rr_frac_ecal_good': 'float',
        'rr_frac_hcal_good': 'float',
        'rr_frac_dt_good': 'float',
        'rr_frac_csc_good': 'float',
        'rr_frac_tracking_good': 'float',
        'rr_frac_muon_good': 'float',
        'rr_frac_egamma_good': 'float',
        'rr_frac_tau_good': 'float',
        'rr_frac_jetmet_good': 'float',
        'rr_frac_btag_good': 'float'
    }

    attribute_map = {
        'id': 'id',
        'run': 'run',
        '_date': 'date',
        'rr_is_pixel_good': 'rr_is_pixel_good',
        'rr_is_strip_good': 'rr_is_strip_good',
        'rr_is_ecal_good': 'rr_is_ecal_good',
        'rr_is_hcal_good': 'rr_is_hcal_good',
        'rr_is_dt_good': 'rr_is_dt_good',
        'rr_is_csc_good': 'rr_is_csc_good',
        'rr_is_tracking_good': 'rr_is_tracking_good',
        'rr_is_muon_good': 'rr_is_muon_good',
        'rr_is_egamma_good': 'rr_is_egamma_good',
        'rr_is_tau_good': 'rr_is_tau_good',
        'rr_is_jetmet_good': 'rr_is_jetmet_good',
        'rr_is_btag_good': 'rr_is_btag_good',
        'rr_frac_pixel_good': 'rr_frac_pixel_good',
        'rr_frac_strip_good': 'rr_frac_strip_good',
        'rr_frac_ecal_good': 'rr_frac_ecal_good',
        'rr_frac_hcal_good': 'rr_frac_hcal_good',
        'rr_frac_dt_good': 'rr_frac_dt_good',
        'rr_frac_csc_good': 'rr_frac_csc_good',
        'rr_frac_tracking_good': 'rr_frac_tracking_good',
        'rr_frac_muon_good': 'rr_frac_muon_good',
        'rr_frac_egamma_good': 'rr_frac_egamma_good',
        'rr_frac_tau_good': 'rr_frac_tau_good',
        'rr_frac_jetmet_good': 'rr_frac_jetmet_good',
        'rr_frac_btag_good': 'rr_frac_btag_good'
    }

    def __init__(self, id=None, run=None, _date=None, rr_is_pixel_good=None, rr_is_strip_good=None, rr_is_ecal_good=None, rr_is_hcal_good=None, rr_is_dt_good=None, rr_is_csc_good=None, rr_is_tracking_good=None, rr_is_muon_good=None, rr_is_egamma_good=None, rr_is_tau_good=None, rr_is_jetmet_good=None, rr_is_btag_good=None, rr_frac_pixel_good=None, rr_frac_strip_good=None, rr_frac_ecal_good=None, rr_frac_hcal_good=None, rr_frac_dt_good=None, rr_frac_csc_good=None, rr_frac_tracking_good=None, rr_frac_muon_good=None, rr_frac_egamma_good=None, rr_frac_tau_good=None, rr_frac_jetmet_good=None, rr_frac_btag_good=None):  # noqa: E501
        """RunCertification - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._run = None
        self.__date = None
        self._rr_is_pixel_good = None
        self._rr_is_strip_good = None
        self._rr_is_ecal_good = None
        self._rr_is_hcal_good = None
        self._rr_is_dt_good = None
        self._rr_is_csc_good = None
        self._rr_is_tracking_good = None
        self._rr_is_muon_good = None
        self._rr_is_egamma_good = None
        self._rr_is_tau_good = None
        self._rr_is_jetmet_good = None
        self._rr_is_btag_good = None
        self._rr_frac_pixel_good = None
        self._rr_frac_strip_good = None
        self._rr_frac_ecal_good = None
        self._rr_frac_hcal_good = None
        self._rr_frac_dt_good = None
        self._rr_frac_csc_good = None
        self._rr_frac_tracking_good = None
        self._rr_frac_muon_good = None
        self._rr_frac_egamma_good = None
        self._rr_frac_tau_good = None
        self._rr_frac_jetmet_good = None
        self._rr_frac_btag_good = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if run is not None:
            self.run = run
        if _date is not None:
            self._date = _date
        if rr_is_pixel_good is not None:
            self.rr_is_pixel_good = rr_is_pixel_good
        if rr_is_strip_good is not None:
            self.rr_is_strip_good = rr_is_strip_good
        if rr_is_ecal_good is not None:
            self.rr_is_ecal_good = rr_is_ecal_good
        if rr_is_hcal_good is not None:
            self.rr_is_hcal_good = rr_is_hcal_good
        if rr_is_dt_good is not None:
            self.rr_is_dt_good = rr_is_dt_good
        if rr_is_csc_good is not None:
            self.rr_is_csc_good = rr_is_csc_good
        if rr_is_tracking_good is not None:
            self.rr_is_tracking_good = rr_is_tracking_good
        if rr_is_muon_good is not None:
            self.rr_is_muon_good = rr_is_muon_good
        if rr_is_egamma_good is not None:
            self.rr_is_egamma_good = rr_is_egamma_good
        if rr_is_tau_good is not None:
            self.rr_is_tau_good = rr_is_tau_good
        if rr_is_jetmet_good is not None:
            self.rr_is_jetmet_good = rr_is_jetmet_good
        if rr_is_btag_good is not None:
            self.rr_is_btag_good = rr_is_btag_good
        if rr_frac_pixel_good is not None:
            self.rr_frac_pixel_good = rr_frac_pixel_good
        if rr_frac_strip_good is not None:
            self.rr_frac_strip_good = rr_frac_strip_good
        if rr_frac_ecal_good is not None:
            self.rr_frac_ecal_good = rr_frac_ecal_good
        if rr_frac_hcal_good is not None:
            self.rr_frac_hcal_good = rr_frac_hcal_good
        if rr_frac_dt_good is not None:
            self.rr_frac_dt_good = rr_frac_dt_good
        if rr_frac_csc_good is not None:
            self.rr_frac_csc_good = rr_frac_csc_good
        if rr_frac_tracking_good is not None:
            self.rr_frac_tracking_good = rr_frac_tracking_good
        if rr_frac_muon_good is not None:
            self.rr_frac_muon_good = rr_frac_muon_good
        if rr_frac_egamma_good is not None:
            self.rr_frac_egamma_good = rr_frac_egamma_good
        if rr_frac_tau_good is not None:
            self.rr_frac_tau_good = rr_frac_tau_good
        if rr_frac_jetmet_good is not None:
            self.rr_frac_jetmet_good = rr_frac_jetmet_good
        if rr_frac_btag_good is not None:
            self.rr_frac_btag_good = rr_frac_btag_good

    @property
    def id(self):
        """Gets the id of this RunCertification.  # noqa: E501


        :return: The id of this RunCertification.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RunCertification.


        :param id: The id of this RunCertification.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def run(self):
        """Gets the run of this RunCertification.  # noqa: E501


        :return: The run of this RunCertification.  # noqa: E501
        :rtype: int
        """
        return self._run

    @run.setter
    def run(self, run):
        """Sets the run of this RunCertification.


        :param run: The run of this RunCertification.  # noqa: E501
        :type: int
        """

        self._run = run

    @property
    def _date(self):
        """Gets the _date of this RunCertification.  # noqa: E501


        :return: The _date of this RunCertification.  # noqa: E501
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this RunCertification.


        :param _date: The _date of this RunCertification.  # noqa: E501
        :type: datetime
        """

        self.__date = _date

    @property
    def rr_is_pixel_good(self):
        """Gets the rr_is_pixel_good of this RunCertification.  # noqa: E501


        :return: The rr_is_pixel_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_pixel_good

    @rr_is_pixel_good.setter
    def rr_is_pixel_good(self, rr_is_pixel_good):
        """Sets the rr_is_pixel_good of this RunCertification.


        :param rr_is_pixel_good: The rr_is_pixel_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_pixel_good = rr_is_pixel_good

    @property
    def rr_is_strip_good(self):
        """Gets the rr_is_strip_good of this RunCertification.  # noqa: E501


        :return: The rr_is_strip_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_strip_good

    @rr_is_strip_good.setter
    def rr_is_strip_good(self, rr_is_strip_good):
        """Sets the rr_is_strip_good of this RunCertification.


        :param rr_is_strip_good: The rr_is_strip_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_strip_good = rr_is_strip_good

    @property
    def rr_is_ecal_good(self):
        """Gets the rr_is_ecal_good of this RunCertification.  # noqa: E501


        :return: The rr_is_ecal_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_ecal_good

    @rr_is_ecal_good.setter
    def rr_is_ecal_good(self, rr_is_ecal_good):
        """Sets the rr_is_ecal_good of this RunCertification.


        :param rr_is_ecal_good: The rr_is_ecal_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_ecal_good = rr_is_ecal_good

    @property
    def rr_is_hcal_good(self):
        """Gets the rr_is_hcal_good of this RunCertification.  # noqa: E501


        :return: The rr_is_hcal_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_hcal_good

    @rr_is_hcal_good.setter
    def rr_is_hcal_good(self, rr_is_hcal_good):
        """Sets the rr_is_hcal_good of this RunCertification.


        :param rr_is_hcal_good: The rr_is_hcal_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_hcal_good = rr_is_hcal_good

    @property
    def rr_is_dt_good(self):
        """Gets the rr_is_dt_good of this RunCertification.  # noqa: E501


        :return: The rr_is_dt_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_dt_good

    @rr_is_dt_good.setter
    def rr_is_dt_good(self, rr_is_dt_good):
        """Sets the rr_is_dt_good of this RunCertification.


        :param rr_is_dt_good: The rr_is_dt_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_dt_good = rr_is_dt_good

    @property
    def rr_is_csc_good(self):
        """Gets the rr_is_csc_good of this RunCertification.  # noqa: E501


        :return: The rr_is_csc_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_csc_good

    @rr_is_csc_good.setter
    def rr_is_csc_good(self, rr_is_csc_good):
        """Sets the rr_is_csc_good of this RunCertification.


        :param rr_is_csc_good: The rr_is_csc_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_csc_good = rr_is_csc_good

    @property
    def rr_is_tracking_good(self):
        """Gets the rr_is_tracking_good of this RunCertification.  # noqa: E501


        :return: The rr_is_tracking_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_tracking_good

    @rr_is_tracking_good.setter
    def rr_is_tracking_good(self, rr_is_tracking_good):
        """Sets the rr_is_tracking_good of this RunCertification.


        :param rr_is_tracking_good: The rr_is_tracking_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_tracking_good = rr_is_tracking_good

    @property
    def rr_is_muon_good(self):
        """Gets the rr_is_muon_good of this RunCertification.  # noqa: E501


        :return: The rr_is_muon_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_muon_good

    @rr_is_muon_good.setter
    def rr_is_muon_good(self, rr_is_muon_good):
        """Sets the rr_is_muon_good of this RunCertification.


        :param rr_is_muon_good: The rr_is_muon_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_muon_good = rr_is_muon_good

    @property
    def rr_is_egamma_good(self):
        """Gets the rr_is_egamma_good of this RunCertification.  # noqa: E501


        :return: The rr_is_egamma_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_egamma_good

    @rr_is_egamma_good.setter
    def rr_is_egamma_good(self, rr_is_egamma_good):
        """Sets the rr_is_egamma_good of this RunCertification.


        :param rr_is_egamma_good: The rr_is_egamma_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_egamma_good = rr_is_egamma_good

    @property
    def rr_is_tau_good(self):
        """Gets the rr_is_tau_good of this RunCertification.  # noqa: E501


        :return: The rr_is_tau_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_tau_good

    @rr_is_tau_good.setter
    def rr_is_tau_good(self, rr_is_tau_good):
        """Sets the rr_is_tau_good of this RunCertification.


        :param rr_is_tau_good: The rr_is_tau_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_tau_good = rr_is_tau_good

    @property
    def rr_is_jetmet_good(self):
        """Gets the rr_is_jetmet_good of this RunCertification.  # noqa: E501


        :return: The rr_is_jetmet_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_jetmet_good

    @rr_is_jetmet_good.setter
    def rr_is_jetmet_good(self, rr_is_jetmet_good):
        """Sets the rr_is_jetmet_good of this RunCertification.


        :param rr_is_jetmet_good: The rr_is_jetmet_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_jetmet_good = rr_is_jetmet_good

    @property
    def rr_is_btag_good(self):
        """Gets the rr_is_btag_good of this RunCertification.  # noqa: E501


        :return: The rr_is_btag_good of this RunCertification.  # noqa: E501
        :rtype: bool
        """
        return self._rr_is_btag_good

    @rr_is_btag_good.setter
    def rr_is_btag_good(self, rr_is_btag_good):
        """Sets the rr_is_btag_good of this RunCertification.


        :param rr_is_btag_good: The rr_is_btag_good of this RunCertification.  # noqa: E501
        :type: bool
        """

        self._rr_is_btag_good = rr_is_btag_good

    @property
    def rr_frac_pixel_good(self):
        """Gets the rr_frac_pixel_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_pixel_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_pixel_good

    @rr_frac_pixel_good.setter
    def rr_frac_pixel_good(self, rr_frac_pixel_good):
        """Sets the rr_frac_pixel_good of this RunCertification.


        :param rr_frac_pixel_good: The rr_frac_pixel_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_pixel_good = rr_frac_pixel_good

    @property
    def rr_frac_strip_good(self):
        """Gets the rr_frac_strip_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_strip_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_strip_good

    @rr_frac_strip_good.setter
    def rr_frac_strip_good(self, rr_frac_strip_good):
        """Sets the rr_frac_strip_good of this RunCertification.


        :param rr_frac_strip_good: The rr_frac_strip_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_strip_good = rr_frac_strip_good

    @property
    def rr_frac_ecal_good(self):
        """Gets the rr_frac_ecal_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_ecal_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_ecal_good

    @rr_frac_ecal_good.setter
    def rr_frac_ecal_good(self, rr_frac_ecal_good):
        """Sets the rr_frac_ecal_good of this RunCertification.


        :param rr_frac_ecal_good: The rr_frac_ecal_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_ecal_good = rr_frac_ecal_good

    @property
    def rr_frac_hcal_good(self):
        """Gets the rr_frac_hcal_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_hcal_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_hcal_good

    @rr_frac_hcal_good.setter
    def rr_frac_hcal_good(self, rr_frac_hcal_good):
        """Sets the rr_frac_hcal_good of this RunCertification.


        :param rr_frac_hcal_good: The rr_frac_hcal_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_hcal_good = rr_frac_hcal_good

    @property
    def rr_frac_dt_good(self):
        """Gets the rr_frac_dt_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_dt_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_dt_good

    @rr_frac_dt_good.setter
    def rr_frac_dt_good(self, rr_frac_dt_good):
        """Sets the rr_frac_dt_good of this RunCertification.


        :param rr_frac_dt_good: The rr_frac_dt_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_dt_good = rr_frac_dt_good

    @property
    def rr_frac_csc_good(self):
        """Gets the rr_frac_csc_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_csc_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_csc_good

    @rr_frac_csc_good.setter
    def rr_frac_csc_good(self, rr_frac_csc_good):
        """Sets the rr_frac_csc_good of this RunCertification.


        :param rr_frac_csc_good: The rr_frac_csc_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_csc_good = rr_frac_csc_good

    @property
    def rr_frac_tracking_good(self):
        """Gets the rr_frac_tracking_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_tracking_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_tracking_good

    @rr_frac_tracking_good.setter
    def rr_frac_tracking_good(self, rr_frac_tracking_good):
        """Sets the rr_frac_tracking_good of this RunCertification.


        :param rr_frac_tracking_good: The rr_frac_tracking_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_tracking_good = rr_frac_tracking_good

    @property
    def rr_frac_muon_good(self):
        """Gets the rr_frac_muon_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_muon_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_muon_good

    @rr_frac_muon_good.setter
    def rr_frac_muon_good(self, rr_frac_muon_good):
        """Sets the rr_frac_muon_good of this RunCertification.


        :param rr_frac_muon_good: The rr_frac_muon_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_muon_good = rr_frac_muon_good

    @property
    def rr_frac_egamma_good(self):
        """Gets the rr_frac_egamma_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_egamma_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_egamma_good

    @rr_frac_egamma_good.setter
    def rr_frac_egamma_good(self, rr_frac_egamma_good):
        """Sets the rr_frac_egamma_good of this RunCertification.


        :param rr_frac_egamma_good: The rr_frac_egamma_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_egamma_good = rr_frac_egamma_good

    @property
    def rr_frac_tau_good(self):
        """Gets the rr_frac_tau_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_tau_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_tau_good

    @rr_frac_tau_good.setter
    def rr_frac_tau_good(self, rr_frac_tau_good):
        """Sets the rr_frac_tau_good of this RunCertification.


        :param rr_frac_tau_good: The rr_frac_tau_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_tau_good = rr_frac_tau_good

    @property
    def rr_frac_jetmet_good(self):
        """Gets the rr_frac_jetmet_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_jetmet_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_jetmet_good

    @rr_frac_jetmet_good.setter
    def rr_frac_jetmet_good(self, rr_frac_jetmet_good):
        """Sets the rr_frac_jetmet_good of this RunCertification.


        :param rr_frac_jetmet_good: The rr_frac_jetmet_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_jetmet_good = rr_frac_jetmet_good

    @property
    def rr_frac_btag_good(self):
        """Gets the rr_frac_btag_good of this RunCertification.  # noqa: E501


        :return: The rr_frac_btag_good of this RunCertification.  # noqa: E501
        :rtype: float
        """
        return self._rr_frac_btag_good

    @rr_frac_btag_good.setter
    def rr_frac_btag_good(self, rr_frac_btag_good):
        """Sets the rr_frac_btag_good of this RunCertification.


        :param rr_frac_btag_good: The rr_frac_btag_good of this RunCertification.  # noqa: E501
        :type: float
        """

        self._rr_frac_btag_good = rr_frac_btag_good

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RunCertification, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RunCertification):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
